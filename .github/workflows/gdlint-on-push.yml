name: gdlint on push

on:
  pull_request:
    paths:
    - '**/*.gd'

permissions:
  pull-requests: write

concurrency:
  group: gdlint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gdlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Find changed GDScript files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: '**/*.gd'

      - name: Save changed files list
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "${{ steps.changed-files.outputs.all_changed_files }}"\
            | tr ' ' '\n' > gd_script_files.txt

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install gdtoolkit
        run: pip install -q gdtoolkit==4.*
        if: steps.changed-files.outputs.any_changed == 'true'
      
      - name: Install & Lint
        id: lint
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          files=$(cat gd_script_files.txt | grep -v '^addons/')
          lint_output=$(gdlint $files 2>&1)
          exit_code=$?
          echo "lint_output<<EOF" >> $GITHUB_OUTPUT
          echo "$lint_output"       >> $GITHUB_OUTPUT
          echo "EOF"                >> $GITHUB_OUTPUT
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          exit $exit_code
        continue-on-error: true

      - name: Comment PR with gdlint Output
        if: steps.lint.outputs.lint_output != ''
        uses: thollander/actions-comment-pull-request@v3
        with:
          comment-tag: gdlint-check
          github-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ## 🧪 GDScript Lint Check
            ${{ steps.lint.outputs.exit_code == '0' && '✅ No issues' || '❌ Issues found' }}
            ```text
            ${{ steps.lint.outputs.lint_output }}
            ```