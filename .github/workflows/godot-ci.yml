name: "godot-ci export"
on:
  push:
    branches:
      - main
      - jonny

# on:
#   workflow_dispatch:

env:
  GODOT_VERSION: 4.4.1
  EXPORT_NAME: godot_test_framework
  GODOT_TEMPLATES_DIRECTORY: ~/.local/share/godot/export_templates
  PROJECT_PATH: .

jobs:
  web:
    env:
      STAGING_DIRECTORY: build/web
      EXPORT_NAME: web
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      # - name: Configure Git Safe Directory
      #   run: git config --global --add safe.directory /__w/kpop-survivor/kpop-survivor

      - name: echo godot templates contents tree
        run: |
          echo "Godot Templates Directory Contents:"
          ls -laR /root/.local/share/godot/export_templates
          ls -laR $GODOT_TEMPLATES_DIRECTORY
          echo "Godot Templates Version:"
          ls -laR $GODOT_TEMPLATES_DIRECTORY/${GODOT_VERSION}.stable
        continue-on-error: true
      - name: Setup
        run: |
          mkdir -v -p $GODOT_TEMPLATES_DIRECTORY
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable $GODOT_TEMPLATES_DIRECTORY
        continue-on-error: true
      # - name: Set execute permissions for save_version.sh
      #   run: |
      #     cd $PROJECT_PATH
      #     chmod +x save_version.sh

      # - name: Save Version
      #   run: |
      #     cd $PROJECT_PATH
      #     ./save_version.sh
    # Restore .import and .godot cache
      - name: Restore Godot Import Cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PROJECT_PATH }}/.import
            ${{ env.PROJECT_PATH }}/.godot
          key: godot-import-${{ hashFiles('**') }}
          restore-keys: |
            godot-import-${{ hashFiles('**') }}
        continue-on-error: true

      # - name: Download Godot Export Templates
      #   run: |
      #     mkdir -p $GODOT_TEMPLATES_DIRECTORY
      #     cd $GODOT_TEMPLATES_DIRECTORY
      #     wget https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/Godot_v${GODOT_VERSION}_export_templates.tpz
      #     mkdir -p ${GODOT_VERSION}.stable
      #     tar -xf Godot_v${GODOT_VERSION}_export_templates.tpz -C ${GODOT_VERSION}.stable
      

        
      - name: Create staging directory
        run: mkdir -v -p $STAGING_DIRECTORY
      
      - name: Import Assets
        run: |
          cd $PROJECT_PATH
          timeout 200s godot --headless --verbose --import
      
      - name: Web Build
        continue-on-error: true
        run: |
          cd $PROJECT_PATH

          echo "üü® Exporting Web Build..."
          set +e
          EXPORT_LOG=$(mktemp)
          godot --headless --verbose --export-release "Web" "$STAGING_DIRECTORY/index.html" 2>&1 | tee "$EXPORT_LOG"
          EXPORT_EXIT_CODE=$?
          set -e

          echo ""
          echo "üîç Checking for errors in export log..."
          if grep -i -C 2 "error" "$EXPORT_LOG"; then
            echo "‚ùå Errors found in export log!"
          else
            echo "‚úÖ No errors found in export log."
          fi

          exit $EXPORT_EXIT_CODE
          
      - name: List export directory contents
        run: ls -la $STAGING_DIRECTORY
      
      - name: Add coi-service-worker
        run: |
          git clone https://github.com/gzuidhof/coi-serviceworker.git
          mv coi-serviceworker/coi-serviceworker.js $STAGING_DIRECTORY/coi-serviceworker.js
          sed -i '3 i <script src="coi-serviceworker.js"></script>' $STAGING_DIRECTORY/index.html
      
      - name: Zip Web artifacts
        run: zip -r web.zip $STAGING_DIRECTORY

      - name: Upload Web artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: web.zip

      - name: Release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: web.zip
